{"version":3,"file":"index.js","sources":["../../src/index.js","../../src/getSolidColor.js"],"sourcesContent":["const getSolidColor = require(\"./getSolidColor.js\");\n\nmodule.exports = getSolidColor;\n","function isHexColor(hex) {\n  const regExp = /^#[0-9A-F]{6}$/i;\n  return regExp.test(hex);\n}\n\n/**\n * Consumes a hex color and opacity value and returns a hex value mixing the opacity for a new solid color\n *\n *\n * @param color : HEX color value\n * @param opacity : 0-1 value\n * @returns\n */\nfunction getSolidColor(color, opacity = 0.6) {\n  if (!color) {\n    throw new Error(\"Null or undefined value for color.\");\n  }\n\n  if (!isHexColor(color)) {\n    throw new Error(`${color} is not a valid hex value.`);\n  }\n\n  const deriveHex = color.replace(\"#\", \"\").split(/(?=(?:..)*$)/);\n\n  const r = Math.floor(`0x${deriveHex[0]}` * opacity + 0xff * (1 - opacity));\n  const g = Math.floor(`0x${deriveHex[1]}` * opacity + 0xff * (1 - opacity));\n  const b = Math.floor(`0x${deriveHex[2]}` * opacity + 0xff * (1 - opacity));\n\n  return \"#\" + ((r << 16) | (g << 8) | b).toString(16);\n}\n\nmodule.exports = getSolidColor;\n"],"names":["src","color","opacity","Error","test","deriveHex","replace","split","Math","floor","toString"],"mappings":"AAEA,IAAAA,ECWA,SAAuBC,EAAOC,EAAU,IACtC,IAAKD,EACH,MAAM,IAAIE,MAAM,sCAGlB,IAjBe,kBACDC,KAgBEH,GACd,MAAM,IAAIE,MAAM,GAAGF,+BAGrB,MAAMI,EAAYJ,EAAMK,QAAQ,IAAK,IAAIC,MAAM,gBAM/C,MAAO,KAJGC,KAAKC,MAAM,KAAKJ,EAAU,KAAOH,EAAU,KAAQ,EAAIA,KAI7C,GAHVM,KAAKC,MAAM,KAAKJ,EAAU,KAAOH,EAAU,KAAQ,EAAIA,KAGjC,EAFtBM,KAAKC,MAAM,KAAKJ,EAAU,KAAOH,EAAU,KAAQ,EAAIA,KAEzBQ,SAAS,GACnD"}